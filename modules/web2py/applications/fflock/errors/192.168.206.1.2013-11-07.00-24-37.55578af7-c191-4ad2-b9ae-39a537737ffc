(dp1
S'output'
p2
S"<type 'exceptions.UnboundLocalError'> local variable 'servers' referenced before assignment"
p3
sS'layer'
p4
S'/mnt/hgfs/fflock/modules/web2py/applications/fflock/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n### required - do no delete\n\nimport sys\n#sys.path.append(\'/mnt/hgfs/fflock/\')\nfrom modules import fflock_globals\nfrom modules import fflock_utility\nDATABASE_HOST = "192.168.206.133"\nDATABASE_PORT = 3306\nDATABASE_USER = "fflock"\nDATABASE_PASSWD = "fflock"\nDATABASE_NAME = "fflock"\n\nENCODER = "ffmpeg"\nNFS_PATH = ""\nSLAVE_MOUNT_PREFIX_PATH = ""\nS3ID = ""\nS3KEY = ""\nS3BUCKET = ""\nCONFIG_FILE = ""\n\nFETCH_RETRIES = 3\n\n\n\ndef user(): return dict(form=auth())\ndef download(): return response.download(request,db)\ndef call(): return service()\n### end requires\ndef index():\n    _db = fflock_utility.dbconnect()\n    serverstatecursor = _db.cursor()\n    serverstatecursor.execute("SELECT UUID, ServerType, State FROM Servers")\n    serverstateresults = serverstatecursor.fetchall()\n    for server in serverstateresults:\n        servers += server[1]\n    output = fflock_globals.DATABASE_HOST\n    return dict(message=output)\n\ndef error():\n    return dict()\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/mnt/hgfs/fflock/modules/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/mnt/hgfs/fflock/modules/web2py/applications/fflock/controllers/default.py", line 43, in <module>\n  File "/mnt/hgfs/fflock/modules/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/mnt/hgfs/fflock/modules/web2py/applications/fflock/controllers/default.py", line 36, in index\n    servers += server[1]\nUnboundLocalError: local variable \'servers\' referenced before assignment\n'
p11
s.